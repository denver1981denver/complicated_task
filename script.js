'use strict';

// Используйте функции alert, confirm, prompt для общения с пользователем.

// Написать игровой бот.

// "Загадывание случайного числа от 1 до 100"

// Что должна делать программа:
// — спрашивает пользователя: "Угадай число от 1 до 100".
// — если пользовательское число больше, то бот выводит "Загаданное число меньше" и предлагает ввести новый вариант;
// — если пользовательское число меньше, то бот выводит "Загаданное число больше" и предлагает ввести новый вариант;
// — если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
// — если пользователь нажимает "Отмена", то игра заканчивается и выводится сообщение "Игра окончена".

// —  если пользовательское число равно загаданному, 
//то игра заканчивается и выводит сообщение  "Поздравляю, Вы угадали!!!".

// Программа должны быть выполнена с помощью рекурсии, без единого цикла.

// Загаданное число должно храниться «в замыкании»

// Кол-во попыток пользователя должно быть ограничено: 10

// — если пользовательское число больше, то бот выводит "Загаданное число меньше,
// осталось попыток ..." и предлагает ввести новый вариант;
// — если пользовательское число меньше, то бот выводит "Загаданное число больше,
// осталось попыток ..." и предлагает ввести новый вариант;
// — если пользователь вводит правильное число, то бот выводит "Поздравляю, Вы угадали!!!
// Хотели бы сыграть еще?", при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)
// — если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
// — если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.
// — если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"

// Программа должны быть выполнена с помощью рекурсии, без единого цикла.

// Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»

// 2 способ

const getRandomInt = function(min,max) {
	min = Math.ceil(min);
	max = Math.floor(max);
	return Math.floor(Math.random() * (max - min + 1)) + min;
};

const numCheck = function(n){
	return !isNaN(parseInt(n)) && isFinite(n);
};

const getNumber = function(str) {
	const numUser = prompt(str);

	if(numUser === null) {
		return null;
	}
	if (numCheck(numUser)) {
		return +numUser;
	}
	alert('Кажется вы забыли ввести число, попробуйте ещё раз!');
	getNumber(str);

};

const getCounter = function() {
	let counter = 0;
	return function() {
		return counter++;
	};
};

const gameBot = function (attemps, min, max) {
	attemps = attemps || 10;
	min = min || 0;
	max = max || 100;

	const random = getRandomInt(min, max);
	const counter = getCounter();

	( function checkNumber() {
	
		const count = counter();

		if (count < attemps) {
			const number = getNumber('Попробуйте угадать число от ' + min + ' до ' + max);
			if(number === null) {
				return alert('До свидания');
			}
			if (number > random) {
				alert('Загаданное число меньше чем ваше!');
				return checkNumber();
			}
			if (number < random) {
				alert('Загаданное число больше чем ваше!');
				return checkNumber();
			}
			if (number === random) {
				alert('Поздравляем! Вы угадали!');
			}
		} else {
			alert ('Количество попыток закончилось! Было загадано число ' + random);
		}

	const questAC = confirm('Хотите сыграть ещё?');

		if (questAC) {
			alert('Отлично начинаем!');
			gameBot(attemps, min, max);
		} else {
			alert('Спасибо за игру, ещё увидимся');
		}
	})();
};

gameBot(10, 0, 100);


